[{"C:\\Users\\tnqls\\OneDrive\\Desktop\\권수빈\\Computer\\z_front_end\\project\\DogMini\\sample\\src\\index.js":"1","C:\\Users\\tnqls\\OneDrive\\Desktop\\권수빈\\Computer\\z_front_end\\project\\DogMini\\sample\\src\\App.js":"2","C:\\Users\\tnqls\\OneDrive\\Desktop\\권수빈\\Computer\\z_front_end\\project\\DogMini\\sample\\src\\stores\\DogStore.js":"3","C:\\Users\\tnqls\\OneDrive\\Desktop\\권수빈\\Computer\\z_front_end\\project\\DogMini\\sample\\src\\components\\DogSelect.js":"4","C:\\Users\\tnqls\\OneDrive\\Desktop\\권수빈\\Computer\\z_front_end\\project\\DogMini\\sample\\src\\components\\DogImage.js":"5","C:\\Users\\tnqls\\OneDrive\\Desktop\\권수빈\\Computer\\z_front_end\\project\\DogMini\\sample\\src\\util\\breeds.js":"6"},{"size":340,"mtime":1610627889240,"results":"7","hashOfConfig":"8"},{"size":279,"mtime":1610628127155,"results":"9","hashOfConfig":"8"},{"size":602,"mtime":1610626093335,"results":"10","hashOfConfig":"8"},{"size":998,"mtime":1610628245609,"results":"11","hashOfConfig":"8"},{"size":1140,"mtime":1610628120119,"results":"12","hashOfConfig":"8"},{"size":704,"mtime":1610621761071,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"11df0b6",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"C:\\Users\\tnqls\\OneDrive\\Desktop\\권수빈\\Computer\\z_front_end\\project\\DogMini\\sample\\src\\index.js",[],["30","31"],"C:\\Users\\tnqls\\OneDrive\\Desktop\\권수빈\\Computer\\z_front_end\\project\\DogMini\\sample\\src\\App.js",[],"C:\\Users\\tnqls\\OneDrive\\Desktop\\권수빈\\Computer\\z_front_end\\project\\DogMini\\sample\\src\\stores\\DogStore.js",[],"C:\\Users\\tnqls\\OneDrive\\Desktop\\권수빈\\Computer\\z_front_end\\project\\DogMini\\sample\\src\\components\\DogSelect.js",["32"],"import React from 'react'\r\nimport { breeds } from '../util/breeds'\r\nimport { inject, observer } from 'mobx-react'\r\nimport { DogStore } from '../stores/DogStore'\r\nimport '../styles/DogSelect.css'\r\n\r\n\r\n\r\n@inject('dogStore')\r\n@observer\r\nclass DogSelect extends React.Component{\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {currentText: \"\"}\r\n  }\r\n\r\n  handleChange = event => {\r\n    this.setState({currentText: event.target.value}) \r\n  }\r\n\r\n\r\n\r\n  render(){\r\n\r\n    const {dogStore} = this.props\r\n\r\n    return <div>\r\n      <input className=\"input_breed\" type=\"text\" placeholder=\"select breed\" \r\n      onChange = {e => this.handleChange(e)} />\r\n\r\n      <ul className=\"breeds\">\r\n        {breeds.map((breed, index) => {\r\n        return breed.includes(this.state.currentText) && <li className=\"breeds_breed\"\r\n        onClick={() => dogStore.setDog(breed)} \r\n        key={index}>{breed}</li>  //dogStore 구조분해\r\n      })} \r\n      </ul>\r\n\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default DogSelect;","C:\\Users\\tnqls\\OneDrive\\Desktop\\권수빈\\Computer\\z_front_end\\project\\DogMini\\sample\\src\\components\\DogImage.js",["33"],"import React from 'react'\r\nimport { inject, observer } from 'mobx-react'\r\nimport '../styles/DogImage.css'\r\n\r\n@inject('dogStore')\r\n@observer\r\nclass DogImage extends React.Component{\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      gotImage : false,\r\n      src : \"\"\r\n    }\r\n  }\r\n\r\n  handleClick = () => {\r\n    const {dogStore} = this.props\r\n\r\n    dogStore.getImage().then(result => {\r\n      this.setState({\r\n        gotImage: true,\r\n        src: result.data.message\r\n      })\r\n      \r\n    }).catch(failed => {\r\n      console.log(failed)\r\n    })\r\n\r\n  }\r\n\r\n  render(){\r\n    const {gotImage, src} = this.state\r\n    const {dogStore} = this.props\r\n\r\n    return <div className=\"album\">\r\n      <div className=\"album_api\">\r\n        <p>\r\n          URL: https://dog.ceo/api/breed/<input value={dogStore.dog} \r\n          className=\"album_api_breed\" type=\"text\" readOnly />/images/random\r\n          <button onClick={this.handleClick}>FETCH</button>\r\n        </p>\r\n      </div>\r\n      <div className=\"album_image\">\r\n        {gotImage && <img src={src} alt=\"DOG IMAGE\" />}\r\n      </div>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default DogImage;","C:\\Users\\tnqls\\OneDrive\\Desktop\\권수빈\\Computer\\z_front_end\\project\\DogMini\\sample\\src\\util\\breeds.js",[],["34","35"],{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":4,"column":10,"nodeType":"42","messageId":"43","endLine":4,"endColumn":18},{"ruleId":"44","severity":1,"message":"45","line":45,"column":22,"nodeType":"46","endLine":45,"endColumn":55},{"ruleId":"36","replacedBy":"47"},{"ruleId":"38","replacedBy":"48"},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"no-unused-vars","'DogStore' is defined but never used.","Identifier","unusedVar","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement",["49"],["50"],"no-global-assign","no-unsafe-negation"]